name: Build and Test C Shell

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [gcc, clang]
        exclude:
          - os: macos-latest
            compiler: gcc

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up environment
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get update && sudo apt-get install -y build-essential valgrind cppcheck
          fi
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            brew install llvm cppcheck
          fi
      
      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=${{ matrix.compiler }}
      
      - name: Build
        run: cmake --build build
      
      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure
      
      - name: Static analysis
        if: matrix.os == 'ubuntu-latest'
        run: |
          cppcheck --enable=warning,performance,portability --suppress=missingIncludeSystem --error-exitcode=1 src/

  code_quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Format check
        run: |
          find src include -name "*.c" -o -name "*.h" | xargs clang-format --dry-run --Werror
      
      - name: Memory check
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Debug
          cmake --build build
          cd build
          valgrind --leak-check=full --error-exitcode=1 ./bin/shell < ../tests/fixtures/basic_commands.txt